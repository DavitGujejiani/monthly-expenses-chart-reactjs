{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","console","log","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","submitHandler","preventDefault","expenseData","Date","onSaveExpenseData","toggleShowForm","showForm","setShowForm","onSubmit","htmlFor","type","min","step","onClick","NewExpense","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7bdfce45.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n    const classes = \"card \" + props.className;\r\n    return <div className={classes}>{props.children}</div>;\r\n}\r\nexport default Card;\r\n","import './ExpensesFilter.css';\n\nfunction ExpensesFilter(props) {\n    function dropdownChangeHandler(event) {\n        props.onChangeFilter(event.target.value);\n    }\n    return (\n        <div className=\"expenses-filter\">\n            <div className=\"expenses-filter__control\">\n                <label>Filter by year</label>\n                <select value={props.selected} onChange={dropdownChangeHandler}>\n                    <option value=\"2022\">2022</option>\n                    <option value=\"2021\">2021</option>\n                    <option value=\"2020\">2020</option>\n                    <option value=\"2019\">2019</option>\n                </select>\n            </div>\n        </div>\n    );\n}\n\nexport default ExpensesFilter;\n","import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props) {\r\n    const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n    const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nfunction ExpenseItem(props) {\n    return (\n        <li>\n            <Card className=\"expense-item\">\n                <ExpenseDate date={props.date} />\n                <div className=\"expense-item__description\">\n                    <h2>{props.title}</h2>\n                    <div className=\"expense-item__price\">${props.amount}</div>\n                </div>\n            </Card>\n        </li>\n    );\n}\n\nexport default ExpenseItem;\n","import ExpenseItem from './ExpenseItem';\nimport './ExpensesList.css';\n\nconst ExpensesList = (props) => {\n    if (props.items.length === 0) {\n        return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>;\n    }\n\n    return (\n        <ul className=\"expenses-list\">\n            {props.items.map((expense) => (\n                <ExpenseItem\n                    key={expense.id}\n                    title={expense.title}\n                    amount={expense.amount}\n                    date={expense.date}\n                />\n            ))}\n        </ul>\n    );\n};\n\nexport default ExpensesList;\n","import './ChartBar.css';\n\nconst ChartBar = (props) => {\n    let barFillHeight = '0%';\n\n    if (props.maxValue > 0) {\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n    }\n\n    return (\n        <div className=\"chart-bar\">\n            <div className=\"chart-bar__inner\">\n                <div\n                    className=\"chart-bar__fill\"\n                    style={{ height: barFillHeight }}\n                />\n            </div>\n            <div className=\"chart-bar__label\">{props.label}</div>\n        </div>\n    );\n};\n\nexport default ChartBar;\n","import ChartBar from './ChartBar';\nimport './Chart.css';\n\nconst Chart = (props) => {\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n    console.log(dataPointValues)\n    const totalMaximum = Math.max(...dataPointValues);\n    console.log(totalMaximum)\n\n    return (\n        <div className=\"chart\">\n            {props.dataPoints.map((dataPoint) => (\n                <ChartBar\n                    key={dataPoint.label}\n                    value={dataPoint.value}\n                    maxValue={totalMaximum}\n                    label={dataPoint.label}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default Chart;\n","import Chart from '../Chart/Chart';\n\nconst ExpensesChart = (props) => {\n    const chartDataPoints = [\n        { label: 'Jan', value: 0 },\n        { label: 'Feb', value: 0 },\n        { label: 'Mar', value: 0 },\n        { label: 'Apr', value: 0 },\n        { label: 'May', value: 0 },\n        { label: 'Jun', value: 0 },\n        { label: 'Jul', value: 0 },\n        { label: 'Aug', value: 0 },\n        { label: 'Sep', value: 0 },\n        { label: 'Oct', value: 0 },\n        { label: 'Nov', value: 0 },\n        { label: 'Dec', value: 0 },\n    ];\n    for (const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth(); // January => 0\n        chartDataPoints[expenseMonth].value += expense.amount;\n    }\n\n    return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;","import './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport ExpensesList from './ExpensesList';\nimport ExpensesChart from './ExpensesChart';\nimport { useState } from 'react';\n\nfunction Expenses(props) {\n    const [filteredYear, setFilteredYear] = useState('2020');\n\n    const filterChangeHandler = filteredYear => {\n        setFilteredYear(filteredYear);\n    };\n    const filteredExpenses = props.items.filter((expense) => {\n        return expense.date.getFullYear().toString() === filteredYear;\n    });\n\n    return (\n        <div>\n            <Card className=\"expenses\">\n                <ExpensesFilter\n                    selected={filteredYear}\n                    onChangeFilter={filterChangeHandler}\n                />\n                <ExpensesChart expenses={filteredExpenses} />\n                <ExpensesList items={filteredExpenses} />\n            </Card>\n        </div>\n    );\n}\n\nexport default Expenses;\n","import { useState } from 'react';\n\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredDate, setEnteredDate] = useState('');\n\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value);\n    };\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value);\n    };\n    const dateChangeHandler = (event) => {\n        setEnteredDate(event.target.value);\n    };\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        const expenseData = {\n            title: enteredTitle,\n            amount: +enteredAmount,\n            date: new Date(enteredDate),\n        };\n        props.onSaveExpenseData(expenseData);\n        setEnteredTitle('');\n        setEnteredAmount('');\n        setEnteredDate('');\n        toggleShowForm();\n    };\n\n    const [showForm, setShowForm] = useState(false);\n\n    const toggleShowForm = () => {\n        setShowForm(!showForm);\n    };\n\n    if (showForm === true) {\n        return (\n            <form onSubmit={submitHandler}>\n                <div className=\"new-expense__controls\">\n                    <div className=\"new-expense__control\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input\n                            type=\"text\"\n                            value={enteredTitle}\n                            onChange={titleChangeHandler}\n                        />\n                    </div>\n                    <div className=\"new-expense__control\">\n                        <label htmlFor=\"amount\">Amount</label>\n                        <input\n                            type=\"number\"\n                            min=\"0.01\"\n                            step=\"0.01\"\n                            value={enteredAmount}\n                            onChange={amountChangeHandler}\n                        />\n                    </div>\n                    <div className=\"new-expense__control\">\n                        <label htmlFor=\"date\">Date</label>\n                        <input\n                            type=\"date\"\n                            min=\"2019-01-01\"\n                            max=\"2022-12-31\"\n                            value={enteredDate}\n                            onChange={dateChangeHandler}\n                        />\n                    </div>\n                    <div className=\"new-expense__actions\">\n                        <button type=\"button\" onClick={toggleShowForm}>Cancel</button>\n                        <button type=\"submit\">Add Expense</button>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n\n    return (\n        <form onSubmit={submitHandler}>\n            <div className=\"new-expense__controls\">\n                <button onClick={toggleShowForm}>Add New Expense</button>\n            </div>\n        </form>\n    );\n};\n\nexport default ExpenseForm;\n","import ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nfunction NewExpense(props) {\r\n    function saveExpenseDataHandler(enteredExpenseData) {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString(),\r\n        };\r\n        props.onAddExpense(expenseData);\r\n    }\r\n\r\n    return (\r\n        <div className=\"new-expense\">\r\n            <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewExpense;\r\n","import Expenses from './components/Expenses/Expenses';\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport { useState } from 'react';\n\nconst DUMMY_EXPENSES = [\n    {\n        id: 'e1',\n        title: 'Toilet Paper',\n        amount: 94.12,\n        date: new Date(2020, 7, 14),\n    },\n    {\n        id: 'e2',\n        title: 'New TV',\n        amount: 799.49,\n        date: new Date(2021, 2, 12),\n    },\n    {\n        id: 'e3',\n        title: 'Car Insurance',\n        amount: 294.67,\n        date: new Date(2021, 2, 28),\n    },\n    {\n        id: 'e4',\n        title: 'New Desk (Wooden)',\n        amount: 450,\n        date: new Date(2021, 5, 12),\n    },\n];\n\nfunction App() {\n    const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n    function addExpenseHandler(expense) {\n        setExpenses((prevExpenses) => {\n            return [expense, ...prevExpenses];\n        });\n    }\n\n    return (\n        <div>\n            <NewExpense onAddExpense={addExpenseHandler} />\n            <Expenses items={expenses} />\n        </div>\n    );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}